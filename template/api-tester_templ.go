// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package template

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "strings"
import "github.com/MishraShardendu22/Scanner/util"

func APITester() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"w-full\"><div class=\"bg-black border-4 border-yellow-400 shadow-lg p-8 mb-6\"><h2 class=\"text-3xl font-bold mb-6 text-yellow-400\">API Endpoint Tester</h2><p class=\"text-white mb-6\">Test all API endpoints interactively and see live responses</p></div><div class=\"bg-black border-4 border-yellow-400 shadow-lg p-8 mb-6\"><h3 class=\"text-2xl font-bold mb-4 text-yellow-400\">Scan Endpoints</h3><div class=\"border border-yellow-400 p-6 mb-4 bg-black\"><div class=\"flex items-center justify-between mb-4\"><div><span class=\"bg-yellow-400 text-black px-3 py-1 font-mono text-sm font-bold mr-3\">POST</span> <span class=\"text-lg font-mono text-yellow-400\">/scan</span></div><button hx-post=\"/scan\" hx-include=\"#scanRequestBody\" hx-target=\"#scanResponse\" hx-swap=\"innerHTML\" hx-on::after-request=\"formatResponse(event, 'scanResponse')\" class=\"bg-yellow-400 hover:bg-yellow-500 text-black font-bold py-2 px-6 transition\">Test</button></div><p class=\"text-white mb-4\">Initiate a new security scan for AI models, datasets, or spaces</p><div class=\"bg-black border border-yellow-400 p-4\"><label class=\"block text-sm font-semibold text-yellow-400 mb-2\">Request Body:</label> <textarea id=\"scanRequestBody\" name=\"body\" class=\"w-full h-32 p-3 border-2 border-yellow-400 bg-black text-yellow-400 font-mono text-sm\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(strings.TrimSpace(util.DefaultScanJSON))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `template/api-tester.templ`, Line: 38, Col: 202}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</textarea></div><div id=\"scanResponse\" class=\"mt-4\"></div></div></div><div class=\"bg-black border-4 border-yellow-400 shadow-lg p-8 mb-6\"><h3 class=\"text-2xl font-bold mb-4 text-yellow-400\">Fetch Endpoints</h3><div class=\"border border-yellow-400 p-6 mb-4 bg-black\"><div class=\"flex items-center justify-between mb-4\"><div><span class=\"bg-yellow-400 text-black px-3 py-1 font-mono text-sm font-bold mr-3\">POST</span> <span class=\"text-lg font-mono text-yellow-400\">/fetch/model</span></div><button hx-post=\"/fetch/model\" hx-include=\"#fetchModelBody\" hx-target=\"#fetchModelResponse\" hx-swap=\"innerHTML\" hx-on::after-request=\"formatResponse(event, 'fetchModelResponse')\" class=\"bg-yellow-400 hover:bg-yellow-500 text-black font-bold py-2 px-6 transition\">Test</button></div><p class=\"text-white mb-4\">Fetch and store AI model information from HuggingFace</p><div class=\"bg-black border border-yellow-400 p-4\"><label class=\"block text-sm font-semibold text-yellow-400 mb-2\">Request Body:</label> <textarea id=\"fetchModelBody\" name=\"body\" class=\"w-full h-32 p-3 border-2 border-yellow-400 bg-black text-yellow-400 font-mono text-sm\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(strings.TrimSpace(util.DefaultFetchModelJSON))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `template/api-tester.templ`, Line: 66, Col: 207}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</textarea></div><div id=\"fetchModelResponse\" class=\"mt-4\"></div></div><div class=\"border border-yellow-400 p-6 mb-4 bg-black\"><div class=\"flex items-center justify-between mb-4\"><div><span class=\"bg-yellow-400 text-black px-3 py-1 font-mono text-sm font-bold mr-3\">POST</span> <span class=\"text-lg font-mono text-yellow-400\">/fetch/dataset</span></div><button hx-post=\"/fetch/dataset\" hx-include=\"#fetchDatasetBody\" hx-target=\"#fetchDatasetResponse\" hx-swap=\"innerHTML\" hx-on::after-request=\"formatResponse(event, 'fetchDatasetResponse')\" class=\"bg-yellow-400 hover:bg-yellow-500 text-black font-bold py-2 px-6 transition\">Test</button></div><p class=\"text-white mb-4\">Fetch and store dataset information from HuggingFace</p><div class=\"bg-black border border-yellow-400 p-4\"><label class=\"block text-sm font-semibold text-yellow-400 mb-2\">Request Body:</label> <textarea id=\"fetchDatasetBody\" name=\"body\" class=\"w-full h-32 p-3 border-2 border-yellow-400 bg-black text-yellow-400 font-mono text-sm\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(strings.TrimSpace(util.DefaultFetchDatasetJSON))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `template/api-tester.templ`, Line: 89, Col: 211}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</textarea></div><div id=\"fetchDatasetResponse\" class=\"mt-4\"></div></div></div><div class=\"bg-black border-4 border-yellow-400 shadow-lg p-8 mb-6\"><h3 class=\"text-2xl font-bold mb-4 text-yellow-400\">Results Endpoints</h3><div class=\"border border-yellow-400 p-6 mb-4 bg-black\"><div class=\"flex items-center justify-between mb-4\"><div><span class=\"bg-yellow-400 text-black px-3 py-1 font-mono text-sm font-bold mr-3\">GET</span> <span class=\"text-lg font-mono text-yellow-400\">/api/results</span></div><button hx-get=\"/api/results\" hx-target=\"#allResultsResponse\" hx-swap=\"innerHTML\" hx-on::after-request=\"formatResponse(event, 'allResultsResponse')\" class=\"bg-yellow-400 hover:bg-yellow-500 text-black font-bold py-2 px-6 transition\">Test</button></div><p class=\"text-white mb-4\">Get all scan results from the database</p><div id=\"allResultsResponse\" class=\"mt-4\"></div></div><div class=\"border border-yellow-400 p-6 mb-4 bg-black\"><div class=\"flex items-center justify-between mb-4\"><div><span class=\"bg-yellow-400 text-black px-3 py-1 font-mono text-sm font-bold mr-3\">GET</span> <span class=\"text-lg font-mono text-yellow-400\">/api/dashboard</span></div><button hx-get=\"/api/dashboard\" hx-target=\"#dashboardResponse\" hx-swap=\"innerHTML\" hx-on::after-request=\"formatResponse(event, 'dashboardResponse')\" class=\"bg-yellow-400 hover:bg-yellow-500 text-black font-bold py-2 px-6 transition\">Test</button></div><p class=\"text-white mb-4\">Get dashboard statistics and summary</p><div id=\"dashboardResponse\" class=\"mt-4\"></div></div></div></div><script src=\"https://unpkg.com/htmx.org@1.9.10\"></script> <script type=\"text/javascript\">\n            function formatResponse(event, targetId) {\n                const xhr = event.detail.xhr;\n                const target = document.getElementById(targetId);\n                let response;\n                try {\n                    response = JSON.parse(xhr.response);\n                } catch (e) {\n                    response = xhr.response;\n                }\n                const html = `\n                    <label class=\"block text-sm font-semibold text-yellow-400 mb-2\">Response:</label>\n                    <pre class=\"bg-black border-2 border-yellow-400 text-yellow-400 p-4 overflow-x-auto text-sm ${targetId === 'allResultsResponse' ? 'max-h-96' : ''}\">${JSON.stringify(response, null, 2)}</pre>\n                `;\n                target.innerHTML = html;\n            }\n        </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("API Tester").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
