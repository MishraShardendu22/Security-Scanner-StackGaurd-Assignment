// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package template

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func ScanForm() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"w-full\"><div class=\"bg-black border-4 border-yellow-400 shadow-lg p-8\"><h2 class=\"text-3xl font-bold mb-6 text-yellow-400\">Start New Security Scan</h2><form id=\"scanForm\"><!-- Two Column Layout --><div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\"><!-- Left Column - Resource Type Selection --><div><label class=\"block text-yellow-400 font-semibold mb-4 text-lg\">Select Resource Type</label><div class=\"space-y-4\"><label class=\"cursor-pointer block\"><input type=\"radio\" name=\"resourceType\" value=\"model\" class=\"peer sr-only\" checked><div class=\"border-2 border-yellow-400 peer-checked:bg-yellow-400 bg-black p-6 text-center transition hover:bg-yellow-400 group\"><i class=\"fas fa-robot text-4xl mb-3 text-yellow-400 group-hover:text-black\"></i><div class=\"font-bold text-yellow-400 group-hover:text-black text-xl\">AI Model</div></div></label> <label class=\"cursor-pointer block\"><input type=\"radio\" name=\"resourceType\" value=\"dataset\" class=\"peer sr-only\"><div class=\"border-2 border-yellow-400 peer-checked:bg-yellow-400 bg-black p-6 text-center transition hover:bg-yellow-400 group\"><i class=\"fas fa-database text-4xl mb-3 text-yellow-400 group-hover:text-black\"></i><div class=\"font-bold text-yellow-400 group-hover:text-black text-xl\">Dataset</div></div></label> <label class=\"cursor-pointer block\"><input type=\"radio\" name=\"resourceType\" value=\"space\" class=\"peer sr-only\"><div class=\"border-2 border-yellow-400 peer-checked:bg-yellow-400 bg-black p-6 text-center transition hover:bg-yellow-400 group\"><i class=\"fas fa-cube text-4xl mb-3 text-yellow-400 group-hover:text-black\"></i><div class=\"font-bold text-yellow-400 group-hover:text-black text-xl\">Space</div></div></label></div></div><!-- Right Column - Input Fields --><div class=\"space-y-6\"><!-- Organization/User --><div><label for=\"org\" class=\"block text-yellow-400 font-semibold mb-2\">Organization / User</label> <input type=\"text\" id=\"org\" name=\"org\" placeholder=\"e.g., huggingface, meta-llama\" class=\"w-full px-4 py-3 border-2 border-yellow-400 bg-black text-yellow-400 focus:ring-2 focus:ring-yellow-400 focus:border-yellow-400 placeholder-gray-600\" required></div><!-- Resource ID --><div><label for=\"resourceId\" class=\"block text-yellow-400 font-semibold mb-2\">Resource ID</label> <input type=\"text\" id=\"resourceId\" name=\"resourceId\" placeholder=\"e.g., bert-base-uncased, my-dataset\" class=\"w-full px-4 py-3 border-2 border-yellow-400 bg-black text-yellow-400 focus:ring-2 focus:ring-yellow-400 focus:border-yellow-400 placeholder-gray-600\" required></div><!-- Options --><div class=\"bg-black border-2 border-yellow-400 p-4 space-y-3\"><h3 class=\"font-semibold text-yellow-400 mb-3\">Scan Options</h3><label class=\"flex items-center space-x-3 cursor-pointer\"><input type=\"checkbox\" name=\"includePRs\" class=\"w-5 h-5 text-yellow-400 border-yellow-400 focus:ring-2 focus:ring-yellow-400\"> <span class=\"text-white\">Include Pull Requests</span></label> <label class=\"flex items-center space-x-3 cursor-pointer\"><input type=\"checkbox\" name=\"includeDiscussions\" class=\"w-5 h-5 text-yellow-400 border-yellow-400 focus:ring-2 focus:ring-yellow-400\"> <span class=\"text-white\">Include Discussions</span></label></div><!-- Submit Button --><div class=\"flex space-x-4\"><button type=\"submit\" class=\"flex-1 bg-yellow-400 hover:bg-yellow-500 text-black font-bold py-3 px-6 transition shadow-lg\">Start Scan</button> <button type=\"reset\" class=\"bg-black border-2 border-yellow-400 hover:bg-yellow-400 hover:text-black text-white font-bold py-3 px-6 transition\">Reset</button></div></div></div></form><!-- Results Section --><div id=\"scanResults\" class=\"mt-8 hidden\"><div class=\"border-t-2 border-yellow-400 pt-6\"><h3 class=\"text-2xl font-bold mb-4 text-yellow-400\"><i class=\"fas fa-chart-bar mr-2 text-yellow-400\"></i>Scan Results</h3><div id=\"resultsContent\" class=\"space-y-4\"><!-- Results will be inserted here dynamically --></div></div></div><!-- Loading Spinner --><div id=\"loadingSpinner\" class=\"mt-8 text-center hidden\"><div class=\"inline-block rounded-full h-12 w-12 border-4 border-gray-700 border-t-yellow-400\" style=\"animation: spin 1s linear infinite;\"></div><p class=\"mt-4 text-gray-300 font-medium\">Scanning in progress...</p></div></div></div><style>\n@keyframes spin {\n0% { transform: rotate(0deg); }\n100% { transform: rotate(360deg); }\n}\n</style> <script>\n// Handle resource type selection to show icons\ndocument.querySelectorAll('input[name=\"resourceType\"]').forEach(radio => {\n\tradio.addEventListener('change', function() {\n\t\t// Remove selected styles from all\n\t\tdocument.querySelectorAll('input[name=\"resourceType\"]').forEach(r => {\n\t\t\tconst container = r.nextElementSibling;\n\t\t\tconst icon = container.querySelector('i');\n\t\t\tconst text = container.querySelector('div');\n\t\t\t\n\t\t\tcontainer.classList.remove('bg-yellow-400');\n\t\t\tcontainer.classList.add('bg-black');\n\t\t\ticon.classList.remove('text-black');\n\t\t\ticon.classList.add('text-yellow-400');\n\t\t\ttext.classList.remove('text-black');\n\t\t\ttext.classList.add('text-yellow-400');\n\t\t});\n\t\t\n\t\t// Add selected styles to checked one\n\t\tconst container = this.nextElementSibling;\n\t\tconst icon = container.querySelector('i');\n\t\tconst text = container.querySelector('div');\n\t\t\n\t\tcontainer.classList.remove('bg-black');\n\t\tcontainer.classList.add('bg-yellow-400');\n\t\ticon.classList.remove('text-yellow-400');\n\t\ticon.classList.add('text-black');\n\t\ttext.classList.remove('text-yellow-400');\n\t\ttext.classList.add('text-black');\n\t});\n});\n\n// Set initial state on page load\nwindow.addEventListener('DOMContentLoaded', function() {\n\tconst checkedRadio = document.querySelector('input[name=\"resourceType\"]:checked');\n\tif (checkedRadio) {\n\t\tconst container = checkedRadio.nextElementSibling;\n\t\tconst icon = container.querySelector('i');\n\t\tconst text = container.querySelector('div');\n\t\t\n\t\tcontainer.classList.remove('bg-black');\n\t\tcontainer.classList.add('bg-yellow-400');\n\t\ticon.classList.remove('text-yellow-400');\n\t\ticon.classList.add('text-black');\n\t\ttext.classList.remove('text-yellow-400');\n\t\ttext.classList.add('text-black');\n\t}\n});\n\ndocument.getElementById('scanForm').addEventListener('submit', async (e) => {\ne.preventDefault();\n\nconst formData = new FormData(e.target);\nconst resourceType = formData.get('resourceType');\nconst org = formData.get('org');\nconst resourceId = formData.get('resourceId');\nconst includePRs = formData.get('includePRs') === 'on';\nconst includeDiscussions = formData.get('includeDiscussions') === 'on';\n\nconst payload = {\norg: org,\ninclude_prs: includePRs,\ninclude_discussions: includeDiscussions\n};\n\nif (resourceType === 'model') payload.model_id = resourceId;\nelse if (resourceType === 'dataset') payload.dataset_id = resourceId;\nelse if (resourceType === 'space') payload.space_id = resourceId;\n\n// Show loading\ndocument.getElementById('loadingSpinner').classList.remove('hidden');\ndocument.getElementById('scanResults').classList.add('hidden');\n\ntry {\nconst response = await fetch('/scan', {\nmethod: 'POST',\nheaders: { 'Content-Type': 'application/json' },\nbody: JSON.stringify(payload)\n});\n\nconst result = await response.json();\n\n// Hide loading\ndocument.getElementById('loadingSpinner').classList.add('hidden');\n\nif (result.status === 'success') {\n// Redirect to results page\nwindow.location.href = `/results/${result.data.request_id}`;\n} else {\nalert('Scan failed: ' + (result.message || 'Unknown error'));\n}\n} catch (error) {\ndocument.getElementById('loadingSpinner').classList.add('hidden');\nalert('Error: ' + error.message);\n}\n});\n</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("New Scan").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
