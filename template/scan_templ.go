// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package template

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func ScanForm() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"max-w-4xl mx-auto\"><div class=\"bg-white rounded-lg shadow-lg p-8\"><h2 class=\"text-3xl font-bold mb-6 text-gray-800\"><i class=\"fas fa-search-plus mr-3 text-blue-600\"></i>Start New Security Scan</h2><form id=\"scanForm\" class=\"space-y-6\"><!-- Resource Type Selection --><div><label class=\"block text-gray-700 font-semibold mb-2\">Select Resource Type</label><div class=\"grid grid-cols-3 gap-4\"><label class=\"cursor-pointer\"><input type=\"radio\" name=\"resourceType\" value=\"model\" class=\"peer sr-only\" checked><div class=\"border-2 border-gray-300 peer-checked:border-blue-600 peer-checked:bg-blue-50 rounded-lg p-4 text-center transition\"><i class=\"fas fa-robot text-3xl mb-2 text-blue-600\"></i><div class=\"font-semibold\">AI Model</div></div></label> <label class=\"cursor-pointer\"><input type=\"radio\" name=\"resourceType\" value=\"dataset\" class=\"peer sr-only\"><div class=\"border-2 border-gray-300 peer-checked:border-green-600 peer-checked:bg-green-50 rounded-lg p-4 text-center transition\"><i class=\"fas fa-database text-3xl mb-2 text-green-600\"></i><div class=\"font-semibold\">Dataset</div></div></label> <label class=\"cursor-pointer\"><input type=\"radio\" name=\"resourceType\" value=\"space\" class=\"peer sr-only\"><div class=\"border-2 border-gray-300 peer-checked:border-purple-600 peer-checked:bg-purple-50 rounded-lg p-4 text-center transition\"><i class=\"fas fa-cube text-3xl mb-2 text-purple-600\"></i><div class=\"font-semibold\">Space</div></div></label></div></div><!-- Organization/User --><div><label for=\"org\" class=\"block text-gray-700 font-semibold mb-2\"><i class=\"fas fa-building mr-2\"></i>Organization / User</label> <input type=\"text\" id=\"org\" name=\"org\" placeholder=\"e.g., huggingface, meta-llama\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\" required></div><!-- Resource ID --><div><label for=\"resourceId\" class=\"block text-gray-700 font-semibold mb-2\"><i class=\"fas fa-tag mr-2\"></i>Resource ID</label> <input type=\"text\" id=\"resourceId\" name=\"resourceId\" placeholder=\"e.g., bert-base-uncased, my-dataset\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\" required></div><!-- Options --><div class=\"bg-gray-50 rounded-lg p-4 space-y-3\"><h3 class=\"font-semibold text-gray-700 mb-3\"><i class=\"fas fa-cog mr-2\"></i>Scan Options</h3><label class=\"flex items-center space-x-3 cursor-pointer\"><input type=\"checkbox\" name=\"includePRs\" class=\"w-5 h-5 text-blue-600 rounded focus:ring-2 focus:ring-blue-500\"> <span class=\"text-gray-700\">Include Pull Requests</span></label> <label class=\"flex items-center space-x-3 cursor-pointer\"><input type=\"checkbox\" name=\"includeDiscussions\" class=\"w-5 h-5 text-blue-600 rounded focus:ring-2 focus:ring-blue-500\"> <span class=\"text-gray-700\">Include Discussions</span></label></div><!-- Submit Button --><div class=\"flex space-x-4\"><button type=\"submit\" class=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition shadow-lg\"><i class=\"fas fa-play-circle mr-2\"></i>Start Scan</button> <button type=\"reset\" class=\"bg-gray-400 hover:bg-gray-500 text-white font-bold py-3 px-6 rounded-lg transition\"><i class=\"fas fa-redo mr-2\"></i>Reset</button></div></form><!-- Results Section --><div id=\"scanResults\" class=\"mt-8 hidden\"><div class=\"border-t pt-6\"><h3 class=\"text-2xl font-bold mb-4 text-gray-800\"><i class=\"fas fa-chart-bar mr-2 text-green-600\"></i>Scan Results</h3><div id=\"resultsContent\" class=\"space-y-4\"><!-- Results will be inserted here dynamically --></div></div></div><!-- Loading Spinner --><div id=\"loadingSpinner\" class=\"mt-8 text-center hidden\"><div class=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div><p class=\"mt-4 text-gray-600\">Scanning in progress...</p></div></div></div><script>\n\t\t\tdocument.getElementById('scanForm').addEventListener('submit', async (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\t\n\t\t\t\tconst formData = new FormData(e.target);\n\t\t\t\tconst resourceType = formData.get('resourceType');\n\t\t\t\tconst org = formData.get('org');\n\t\t\t\tconst resourceId = formData.get('resourceId');\n\t\t\t\tconst includePRs = formData.get('includePRs') === 'on';\n\t\t\t\tconst includeDiscussions = formData.get('includeDiscussions') === 'on';\n\t\t\t\t\n\t\t\t\tconst payload = {\n\t\t\t\t\torg: org,\n\t\t\t\t\tinclude_prs: includePRs,\n\t\t\t\t\tinclude_discussions: includeDiscussions\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tif (resourceType === 'model') payload.model_id = resourceId;\n\t\t\t\telse if (resourceType === 'dataset') payload.dataset_id = resourceId;\n\t\t\t\telse if (resourceType === 'space') payload.space_id = resourceId;\n\t\t\t\t\n\t\t\t\t// Show loading\n\t\t\t\tdocument.getElementById('loadingSpinner').classList.remove('hidden');\n\t\t\t\tdocument.getElementById('scanResults').classList.add('hidden');\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch('/scan', {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\tbody: JSON.stringify(payload)\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tconst result = await response.json();\n\t\t\t\t\t\n\t\t\t\t\t// Hide loading\n\t\t\t\t\tdocument.getElementById('loadingSpinner').classList.add('hidden');\n\t\t\t\t\t\n\t\t\t\t\tif (result.status === 'success') {\n\t\t\t\t\t\t// Redirect to results page\n\t\t\t\t\t\twindow.location.href = `/results/${result.data.request_id}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert('Scan failed: ' + (result.message || 'Unknown error'));\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdocument.getElementById('loadingSpinner').classList.add('hidden');\n\t\t\t\t\talert('Error: ' + error.message);\n\t\t\t\t}\n\t\t\t});\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("New Scan").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
