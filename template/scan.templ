package template

templ ScanForm() {
	@Layout("New Scan") {
		<div class="max-w-4xl mx-auto">
			<div class="bg-white rounded-lg shadow-lg p-8">
				<h2 class="text-3xl font-bold mb-6 text-gray-800">
					<i class="fas fa-search-plus mr-3 text-blue-600"></i>Start New Security Scan
				</h2>
				<form id="scanForm" class="space-y-6">
					<!-- Resource Type Selection -->
					<div>
						<label class="block text-gray-700 font-semibold mb-2">Select Resource Type</label>
						<div class="grid grid-cols-3 gap-4">
							<label class="cursor-pointer">
								<input type="radio" name="resourceType" value="model" class="peer sr-only" checked/>
								<div class="border-2 border-gray-300 peer-checked:border-blue-600 peer-checked:bg-blue-50 rounded-lg p-4 text-center transition">
									<i class="fas fa-robot text-3xl mb-2 text-blue-600"></i>
									<div class="font-semibold">AI Model</div>
								</div>
							</label>
							<label class="cursor-pointer">
								<input type="radio" name="resourceType" value="dataset" class="peer sr-only"/>
								<div class="border-2 border-gray-300 peer-checked:border-green-600 peer-checked:bg-green-50 rounded-lg p-4 text-center transition">
									<i class="fas fa-database text-3xl mb-2 text-green-600"></i>
									<div class="font-semibold">Dataset</div>
								</div>
							</label>
							<label class="cursor-pointer">
								<input type="radio" name="resourceType" value="space" class="peer sr-only"/>
								<div class="border-2 border-gray-300 peer-checked:border-purple-600 peer-checked:bg-purple-50 rounded-lg p-4 text-center transition">
									<i class="fas fa-cube text-3xl mb-2 text-purple-600"></i>
									<div class="font-semibold">Space</div>
								</div>
							</label>
						</div>
					</div>
					<!-- Organization/User -->
					<div>
						<label for="org" class="block text-gray-700 font-semibold mb-2">
							<i class="fas fa-building mr-2"></i>Organization / User
						</label>
						<input type="text" id="org" name="org" placeholder="e.g., huggingface, meta-llama" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" required/>
					</div>
					<!-- Resource ID -->
					<div>
						<label for="resourceId" class="block text-gray-700 font-semibold mb-2">
							<i class="fas fa-tag mr-2"></i>Resource ID
						</label>
						<input type="text" id="resourceId" name="resourceId" placeholder="e.g., bert-base-uncased, my-dataset" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" required/>
					</div>
					<!-- Options -->
					<div class="bg-gray-50 rounded-lg p-4 space-y-3">
						<h3 class="font-semibold text-gray-700 mb-3">
							<i class="fas fa-cog mr-2"></i>Scan Options
						</h3>
						<label class="flex items-center space-x-3 cursor-pointer">
							<input type="checkbox" name="includePRs" class="w-5 h-5 text-blue-600 rounded focus:ring-2 focus:ring-blue-500"/>
							<span class="text-gray-700">Include Pull Requests</span>
						</label>
						<label class="flex items-center space-x-3 cursor-pointer">
							<input type="checkbox" name="includeDiscussions" class="w-5 h-5 text-blue-600 rounded focus:ring-2 focus:ring-blue-500"/>
							<span class="text-gray-700">Include Discussions</span>
						</label>
					</div>
					<!-- Submit Button -->
					<div class="flex space-x-4">
						<button type="submit" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition shadow-lg">
							<i class="fas fa-play-circle mr-2"></i>Start Scan
						</button>
						<button type="reset" class="bg-gray-400 hover:bg-gray-500 text-white font-bold py-3 px-6 rounded-lg transition">
							<i class="fas fa-redo mr-2"></i>Reset
						</button>
					</div>
				</form>
				<!-- Results Section -->
				<div id="scanResults" class="mt-8 hidden">
					<div class="border-t pt-6">
						<h3 class="text-2xl font-bold mb-4 text-gray-800">
							<i class="fas fa-chart-bar mr-2 text-green-600"></i>Scan Results
						</h3>
						<div id="resultsContent" class="space-y-4">
							<!-- Results will be inserted here dynamically -->
						</div>
					</div>
				</div>
				<!-- Loading Spinner -->
				<div id="loadingSpinner" class="mt-8 text-center hidden">
					<div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
					<p class="mt-4 text-gray-600">Scanning in progress...</p>
				</div>
			</div>
		</div>
		<script>
			document.getElementById('scanForm').addEventListener('submit', async (e) => {
				e.preventDefault();
				
				const formData = new FormData(e.target);
				const resourceType = formData.get('resourceType');
				const org = formData.get('org');
				const resourceId = formData.get('resourceId');
				const includePRs = formData.get('includePRs') === 'on';
				const includeDiscussions = formData.get('includeDiscussions') === 'on';
				
				const payload = {
					org: org,
					include_prs: includePRs,
					include_discussions: includeDiscussions
				};
				
				if (resourceType === 'model') payload.model_id = resourceId;
				else if (resourceType === 'dataset') payload.dataset_id = resourceId;
				else if (resourceType === 'space') payload.space_id = resourceId;
				
				// Show loading
				document.getElementById('loadingSpinner').classList.remove('hidden');
				document.getElementById('scanResults').classList.add('hidden');
				
				try {
					const response = await fetch('/scan', {
						method: 'POST',
						headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify(payload)
					});
					
					const result = await response.json();
					
					// Hide loading
					document.getElementById('loadingSpinner').classList.add('hidden');
					
					if (result.status === 'success') {
						// Redirect to results page
						window.location.href = `/results/${result.data.request_id}`;
					} else {
						alert('Scan failed: ' + (result.message || 'Unknown error'));
					}
				} catch (error) {
					document.getElementById('loadingSpinner').classList.add('hidden');
					alert('Error: ' + error.message);
				}
			});
		</script>
	}
}
